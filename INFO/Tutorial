How the web works: HTTP and CGI explained
https://www.garshol.priv.no/download/text/http-tut.html 

to create sockets class
Servidor web C++ desde cero:: objeto socket Eric O Meehan

CO650 W11 C++ Network Programming Part 1: sockets
https://www.youtube.com/watch?v=gntyAFoZp-E&t=0s

CO650 W12 C++ Network Programming Part 2: TCP & UDP
https://www.youtube.com/watch?v=sXW_sNGvqcU

https://medium.com/from-the-scratch/http-server-what-do-you-need-to-know-to-build-a-simple-http-server-from-scratch-d1ef8945e4fa


C++ Web Server from Scratch | Part 1: Creating a Socket Object
https://www.youtube.com/watch?v=YwHErWJIh6Y&t=1227s


epoll and 
epoll and Set Non-blocking

https://blog.varunajayasiri.com/epoll.html
https://stackoverflow.com/questions/66916835/c-confused-by-epoll-and-socket-fd-on-linux-systems-and-async-threads
github onestraw/epoll-example

tutorialspoint.com/cplusplus/cpp_web_programming.htm

github.com/cclaude42/webserv

https://beej.us/guide/bgnet/html/#two-types-of-internet-sockets

webserver

https://github.com/Dungyichao/http_server
https://medium.com/from-the-scratch/http-server-what-do-you-need-to-know-to-build-a-simple-http-server-from-scratch-d1ef8945e4fa


---- select -----
http://www.chuidiang.org/clinux/sockets/socketselect.php


directivas validas


workers workers_numbers; //sets a number of worker thread

listen address[:port]; ó port;   //bing the given addres to the port. 
    if no addreess is given binds 0.0.0.0. 
    if no port, binds to 80.

server_name name ...; //sets names of a virtual server

root path;  //sets the directory for requests.

auth login:password; //restricts a route for a user.

error_page code ... uri; //defines the URI that will be shown for the specified errors.

upload

autoindex on|off; (default off) //enables or disables the directory listing out`put

index file ....;    //defines file that will be used as an index

cgi extension cgi_path;     //defines files that will be executed for given extension

cgi_bin folder_path; (default ./cgi-bin)    //define a folder where to search CGI binaries

sudo lsof -PiTCP -sTCP:LISTEN
npx kill-port 3000 8080 8081
kill -9 $(lsof -ti:3000)
lsof -nti:90| xargs kill -9
sudo kill -9 nb_pid

CGI 
go to http://127.0.0.1/cgi-bin/hello.pl This causes the execution of the perl script hello.pl

Interaction
• Client makes a request by specifying a URL+additional info.
• WS (in the URL) receives the request.
• WS identifies the request as a CGI request
• WS locates the program corresponding to the request.
• WS starts up the handling program (heavy weight process creation!!)
• WS feeds request parameters to handler (through stdin or environment variables).
• Handler executes
• Output of the handler is sent via stdout back to the webserver for rerouting back to the requesting web browser.
• Output is typically a web page.
• Handler terminates.


http://localhost:8001/siteA?x=1,y=2

http://localhost:8001/cgi-bin/ice_cream.py?flavor=mint